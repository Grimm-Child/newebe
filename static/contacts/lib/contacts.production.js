(function(){var a,b,c,d,e,f,g,h,i,j,k,l=Object.prototype.hasOwnProperty,m=function(a,b){function d(){this.constructor=a}for(var c in b)l.call(b,c)&&(a[c]=b[c]);d.prototype=b.prototype,a.prototype=new d,a.__super__=b.prototype;return a};f=function(){function a(){var a;a=document.createElement("div"),a.id="info-dialog",a.className="dialog",a.innerHTML="Test",$("body").prepend(a),this.element=$("#info-dialog"),this.element.hide()}a.prototype.display=function(a){this.element.empty(),this.element.append(a),this.element.show();return this.element.fadeOut(4e3)};return a}(),a=function(){function a(a){var b;b=document.createElement("div"),b.id="confirmation-dialog",b.className="dialog",b.innerHTML='<div id="confirmation-text"></div>',b.innerHTML+='<div id="confirmation-buttons"><span href="" id="confirmation-yes">Yes</span><span href="" id="confirmation-no">No</span></div>',$("body").prepend(b),this.element=$("#confirmation-dialog"),this.element.hide(),this.setNoButton()}a.prototype.setNoButton=function(){var a;a=this.element;return $("#confirmation-no").click(function(){a.fadeOut();return!1})},a.prototype.display=function(a,b){$("#confirmation-text").empty(),$("#confirmation-text").append("<span>"+a+"</span>"),$("#confirmation-yes").click(b);return this.element.show()},a.prototype.hide=function(){return this.element.fadeOut()};return a}(),g=function(){function a(){var a;a=document.createElement("div"),a.id="loading-indicator",a.innerHTML='<img src="/static/images/clock_32.png" />',$("body").prepend(a),this.element=$("#loading-indicator"),this.element.hide()}a.prototype.display=function(){return this.element.show()},a.prototype.hide=function(){return this.element.hide()};return a}(),b=function(){function a(b){a.__super__.constructor.apply(this,arguments),this.set("url",b.url),this.set("name",b.name),this.id=b.slug+"/",b.state&&this.set("state",b.state)}m(a,Backbone.Model),a.prototype.url="/contacts/",a.prototype.getUrl=function(){return this.get("url")},a.prototype.getState=function(){return this.get("state")},a.prototype.setState=function(a){return this.set("state",a)},a.prototype["delete"]=function(){this.url="/contacts/"+this.id,this.destroy();return this.view.remove()},a.prototype.saveToDb=function(){this.url="/contacts/"+this.id,this.save(null,{success:function(a,b){a.setState("Trusted"),a.view.refresh("Trusted");return!0},error:function(a,b){a.setState("Error"),a.view.refresh("Error");return!0}});return this.url},a.prototype.isNew=function(){return!this.getState()};return a}(),c=function(){function a(){a.__super__.constructor.apply(this,arguments)}m(a,Backbone.Collection),a.prototype.model=b,a.prototype.url="/contacts/",a.prototype.comparator=function(a){return a.getUrl()},a.prototype.parse=function(a){return a.rows};return a}(),d=function(){function a(b){this.model=b,a.__super__.constructor.apply(this,arguments),this.model.view=this}m(a,Backbone.View),a.prototype.tagName="div",a.prototype.className="platform-contact-row",a.prototype.template=_.template('<span class="platform-contact-row-buttons">\n<% if (state === "Wait for approval") { %>\n  <a class="platform-contact-wap">Confim</a>\n<% } %>\n<a class="platform-contact-delete">X</a>    \n</span>\n<p class="platform-contact-url">\n <%= name %> | \n <%= url %>\n <span class="platform-contact-state"> (<%= state %>)</span>\n</p>'),a.prototype.events={"click .platform-contact-delete":"onDeleteClicked","click .platform-contact-wap":"onConfirmClicked",mouseover:"onMouseOver",mouseout:"onMouseOut"},a.prototype.onMouseOver=function(){return this.$(".platform-contact-row-buttons").show()},a.prototype.onMouseOut=function(){return this.$(".platform-contact-row-buttons").hide()},a.prototype.onDeleteClicked=function(){var a;a=this.model;return h.display("Are you sure you want to delete this contact ?",function(){h.hide();return a["delete"]()})},a.prototype.onConfirmClicked=function(){return this.model.saveToDb()},a.prototype.remove=function(){return $(this.el).remove()},a.prototype.refresh=function(a){return this.$(".platform-contact-state").text("("+a+")")},a.prototype.render=function(){$(this.el).html(this.template(this.model.toJSON())),this.$(".platform-contact-delete").button(),this.$(".platform-contact-wap").button(),this.$(".platform-contact-row-buttons").hide();return this.el};return a}(),e=function(){function a(){a.__super__.constructor.apply(this,arguments)}m(a,Backbone.View),a.prototype.el=$("#news"),a.prototype.events={"click #contact-post-button":"onPostClicked","submit #contact-post-button":"onPostClicked","click #contact-alm-button":"onAllClicked","click #contact-pending-button":"onPendingClicked","click #contact-request-button":"onRequestedClicked"},a.prototype.initialize=function(){_.bindAll(this,"postNewContact","appendOne","prependOne","addAll"),_.bindAll(this,"onPostClicked"),this.contacts=new c,this.tutorialOn=!0,this.contacts.bind("add",this.prependOne);return this.contacts.bind("refresh",this.addAll)},a.prototype.onPostClicked=function(a){a.preventDefault(),this.postNewContact();return a},a.prototype.onAllClicked=function(a){a.preventDefault();return this.onFilterClicked("#contact-all-button","/contacts/")},a.prototype.onPendingClicked=function(a){a.preventDefault();return this.onFilterClicked("#contact-pending-button","/contacts/pending/")},a.prototype.onRequestedClicked=function(a){a.preventDefault();return this.onFilterClicked("#contact-request-button","/contacts/requested/")},a.prototype.onFilterClicked=function(a,b){if(this.lastFilterClicked!==a){$(a).button("option","disabled",!0),$(this.lastFilterClicked).button("option","disabled",!1),this.lastFilterClicked=a;return this.reloadContacts(b)}},a.prototype.reloadContacts=function(a){k.hide(),this.clearContacts(),this.contacts.url=a,this.contacts.fetch();return this.contacts},a.prototype.clearContacts=function(){return $("#contacts").empty()},a.prototype.addAll=function(){this.contacts.length>0?this.tutorialOn=!1:this.tutorialOn&&this.lastFilterClicked==="#contact-all-button"?this.displayTutorial(1):$("#tutorial-contact").html(null),this.contacts.each(this.appendOne),k.hide();return this.contacts},a.prototype.appendOne=function(a){var b,c;c=new d(a),b=c.render(),$("#contacts").append(b);return c},a.prototype.prependOne=function(a){var b,c;c=new d(a),b=c.render(),$("#contacts").prepend(b),k.hide();if(this.tutorialOn){this.displayTutorial(2);return this.tutorialOn=!1}},a.prototype.clearContacts=function(){return $("#contacts").empty()},a.prototype.clearPostField=function(){$("#contact-url-field").val(null),$("#contact-url-field").focus();return $("#contact-url-field")},a.prototype.clearPostField=function(){$("#contact-url-field").val(null),$("#contact-url-field").focus();return $("#contact-url-field")},a.prototype.fetch=function(){this.contacts.fetch();return this.contacts},a.prototype.postNewContact=function(){var a;a=$("#contact-url-field").val(),this.contacts.find(function(b){return a===b.getUrl()})?j.display("Contact is already in your list"):(k.display(),this.contacts.create({url:a},{success:function(a,b){return k.hide()},error:function(a,b){k.hide();return j.display("An error occured on server.Please refresh the contact list.")}}),$("#contact-url-field").val(null),$("#contact-url-field").focus());return!1},a.prototype.displayTutorial=function(a){return $.get("/contact/tutorial/"+a+"/",function(a){return $("#tutorial-contact").html(a)})},a.prototype.setListeners=function(){$("#contact-post-button").submit(function(a){return i.onPostClicked(a)}),$("#contact-post-button").click(function(a){return i.onPostClicked(a)}),$("#contact-all-button").click(function(a){return i.onAllClicked(a)}),$("#contact-pending-button").click(function(a){return i.onPendingClicked(a)});return $("#contact-request-button").click(function(a){return i.onRequestedClicked(a)})},a.prototype.setWidgets=function(){$("#contact-all-button").button(),$("#contact-pending-button").button(),$("#contact-request-button").button(),$("input#contact-post-button").button(),$("#contact-a").addClass("disabled"),$("#contact-all-button").button("option","disabled",!0);return this.lastFilterClicked="#contact-all-button"};return a}(),j=new f,h=new a,k=new g,i=new e,i.setWidgets(),i.setListeners(),i.clearPostField(),i.fetch()}).call(this)