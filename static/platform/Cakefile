# Cafefile for Newebe News application.


# Dependencies
sys    = require 'sys'
print  = sys.print
puts   = sys.puts
fs     = require 'fs'
{exec} = require 'child_process'


# File to compile
appFiles  = [
  'models/platform',
  'controllers/platformcontroller',
  'views/platform',
  'views/register',
  'views/infodialog',
  'views/loadingindicator',
  'platform'
]

appName = "platform"

# Build task
task 'build', 'Build single application file from source files', ->
  puts 'Start build'
  appContents = new Array remaining = appFiles.length


  # Compile styles
  puts 'Building CSS'
  exec "stylus styles/common.styl", (err, stdout, stderr) ->
    throw err if err
    print stdout + stderr

    # Compile to JS
    puts 'Building JS'
    for file, index in appFiles then do (file, index) ->
      fs.readFile "src/#{file}.coffee", 'utf8', (err, fileContents) ->
        throw err if err
        appContents[index] = fileContents
        process() if --remaining is 0


  process = ->
    # Concatenate files 
    fs.writeFile 'lib/' + appName + '.coffee', appContents.join('\n\n'), 'utf8', (err) ->
      throw err if err

      # Compile files
      exec 'coffee --compile lib/' + appName + '.coffee', (err, stdout, stderr) ->
        throw err if err
        print stdout + stderr
        fs.unlink 'lib/' + appName  + '.coffee', (err) ->
          throw err if err
          puts 'Build done.'
          invoke 'minify'


# Make JS file lighter
task 'minify', 'Minify the resulting application file after build', ->

  puts 'Start minify'
  command = "uglifyjs lib/#{appName}.js > lib/#{appName}.production.js"

  exec command, (err, stdout, stderr) ->
    throw err if err
    print stdout + stderr
    puts 'Minify done.'


# Automatically build app when a change occurs
task 'watch', 'Watch source files and build changes', ->

    for file in appFiles then do (file) ->
        fs.watchFile "src/#{file}.coffee", (curr, prev) ->
            if +curr.mtime isnt +prev.mtime
                puts "Saw change in lib/#{file}.coffee"
                invoke 'build'

