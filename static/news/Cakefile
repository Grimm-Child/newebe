# Cafefile for Newebe News application.

# Configuration
minifier = "/home/gelnior/tools/js/compiler.jar"


# Dependencies
sys    = require 'sys'
print  = sys.print
puts   = sys.puts
fs     = require 'fs'
{exec} = require 'child_process'


# File to compile
appFiles  = [
  '../../platform/src/views/infodialog'
  '../../platform/src/views/loadingindicator'
  'models/micropost',
  'views/micropost',
  'views/newsview',
  'news'
]


# Build task
task 'build', 'Build single application file from source files', ->
  puts 'Start build'
  appContents = new Array remaining = appFiles.length

  # Retrieve file
  for file, index in appFiles then do (file, index) ->
    fs.readFile "src/#{file}.coffee", 'utf8', (err, fileContents) ->
      throw err if err
      appContents[index] = fileContents
      process() if --remaining is 0


  process = ->
    # Concatenate files 
    fs.writeFile 'lib/news.coffee', appContents.join('\n\n'), 'utf8', (err) ->
      throw err if err

      # Compile files
      exec 'coffee --compile lib/news.coffee', (err, stdout, stderr) ->
        throw err if err
        print stdout + stderr
        fs.unlink 'lib/news.coffee', (err) ->
          throw err if err
          puts 'Build done.'
          invoke 'minify'


# Minify task is based on the minifier you set in configuration file.
task 'minify', 'Minify the resulting application file after build', ->

  puts 'Start minify'
  command = 'java -jar ' + minifier + ' --js lib/news.js --js_output_file '
  command += 'lib/news.production.js'

  exec command, (err, stdout, stderr) ->
    throw err if err
    print stdout + stderr
    puts 'Minify done.'

